{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrahim\\\\Desktop\\\\mini_react_project\\\\mini_react_project\\\\mini_react_project\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  // Section 1 define animals array that consists of animal objects\n  let animals = [{\n    id: 0,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/47547/squirrel-animal-cute-rodents-47547.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 1,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/34231/antler-antler-carrier-fallow-deer-hirsch.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 2,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/792381/pexels-photo-792381.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 3,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/162140/duckling-birds-yellow-fluffy-162140.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 4,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/326012/pexels-photo-326012.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 5,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/2295744/pexels-photo-2295744.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 6,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/86405/penguin-funny-blue-water-86405.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 7,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/3608263/pexels-photo-3608263.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 8,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/4588065/pexels-photo-4588065.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 9,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/357159/pexels-photo-357159.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 10,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/59816/swan-bird-nature-water-bird-59816.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 11,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/36846/bald-eagle-adler-bird-of-prey-raptor.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 12,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/5145/animal-easter-chick-chicken.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 13,\n    status: \"hide\",\n    image: \"https://images.pexels.com/photos/40984/animal-ara-macao-beak-bird-40984.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }];\n\n  // Section 2 define required function to get random values\n  // Math.floor to return int number instead of Float // example 2.97 => 2\n  // Math.random to return float number between 0 and 1 // example 0.73\n  // sortRandom to return value in range of [-0.5,0.5] => increase or decrease sort\n\n  const getRandomInt = max => Math.floor(Math.random() * max);\n  const sortRandom = (a, b) => 0.5 - Math.random();\n\n  // Section 3 return random 8 animals objects\n  let randomIndex = 0;\n  let randomArr = [];\n  while (randomIndex < 8) {\n    let randomNumber = getRandomInt(animals.length);\n    if (randomArr.includes(randomNumber)) continue;else {\n      randomArr.push(randomNumber);\n      randomIndex++;\n    }\n  }\n  let eightCards = animals.filter((animal, index) => randomArr.includes(index));\n  let randomCards = [...eightCards, ...eightCards].sort(sortRandom);\n\n  // Section 4 to define functions to control cards cover using useState\n  const [status, setStatus] = useState(\"hide\");\n  const [position, setPosition] = useState(\"\");\n\n  // const handleOnClick = (first) => (console.log(first))\n\n  // Section 5 to return cards div\n  return randomCards.map((animal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => {\n      console.log(index, animal.status);\n      setStatus(status);\n      setPosition(index);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: animal.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 1\n  }, this));\n};\n_s(Cards, \"MVFhXaZoPwBJ3X94BDkDjePz10k=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cards","_s","animals","id","status","image","getRandomInt","max","Math","floor","random","sortRandom","a","b","randomIndex","randomArr","randomNumber","length","includes","push","eightCards","filter","animal","index","randomCards","sort","setStatus","position","setPosition","map","className","onClick","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim/Desktop/mini_react_project/mini_react_project/mini_react_project/src/Components/Cards.js"],"sourcesContent":["import '../App.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Cards = () => {\r\n\r\n// Section 1 define animals array that consists of animal objects\r\nlet animals = [\r\n    {id: 0, status: \"hide\",image :\"https://images.pexels.com/photos/47547/squirrel-animal-cute-rodents-47547.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 1, status: \"hide\",image :\"https://images.pexels.com/photos/34231/antler-antler-carrier-fallow-deer-hirsch.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 2, status: \"hide\",image :\"https://images.pexels.com/photos/792381/pexels-photo-792381.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 3, status: \"hide\",image :\"https://images.pexels.com/photos/162140/duckling-birds-yellow-fluffy-162140.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 4, status: \"hide\",image :\"https://images.pexels.com/photos/326012/pexels-photo-326012.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 5, status: \"hide\",image :\"https://images.pexels.com/photos/2295744/pexels-photo-2295744.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 6, status: \"hide\",image :\"https://images.pexels.com/photos/86405/penguin-funny-blue-water-86405.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 7, status: \"hide\",image :\"https://images.pexels.com/photos/3608263/pexels-photo-3608263.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 8, status: \"hide\",image :\"https://images.pexels.com/photos/4588065/pexels-photo-4588065.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 9, status: \"hide\",image :\"https://images.pexels.com/photos/357159/pexels-photo-357159.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 10, status: \"hide\", image :\"https://images.pexels.com/photos/59816/swan-bird-nature-water-bird-59816.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 11, status: \"hide\", image :\"https://images.pexels.com/photos/36846/bald-eagle-adler-bird-of-prey-raptor.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 12, status: \"hide\", image :\"https://images.pexels.com/photos/5145/animal-easter-chick-chicken.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 13, status: \"hide\", image :\"https://images.pexels.com/photos/40984/animal-ara-macao-beak-bird-40984.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"}\r\n];\r\n\r\n\r\n// Section 2 define required function to get random values\r\n// Math.floor to return int number instead of Float // example 2.97 => 2\r\n// Math.random to return float number between 0 and 1 // example 0.73\r\n// sortRandom to return value in range of [-0.5,0.5] => increase or decrease sort\r\n\r\nconst getRandomInt = max => Math.floor(Math.random() * max);\r\nconst sortRandom = (a, b) => 0.5 - Math.random();  \r\n\r\n// Section 3 return random 8 animals objects\r\nlet randomIndex = 0;\r\nlet randomArr = [];\r\n\r\nwhile (randomIndex < 8)\r\n    {\r\n        let randomNumber = getRandomInt(animals.length);\r\n        if (randomArr.includes(randomNumber)) continue\r\n        else\r\n        {\r\n            randomArr.push(randomNumber);\r\n            randomIndex++;\r\n        }\r\n    }\r\n    \r\nlet eightCards = animals.filter((animal, index) => randomArr.includes(index));\r\n    \r\nlet randomCards = [...eightCards, ...eightCards].sort(sortRandom);\r\n\r\n\r\n// Section 4 to define functions to control cards cover using useState\r\nconst [status, setStatus] = useState(\"hide\");\r\nconst [position, setPosition] = useState(\"\");\r\n\r\n// const handleOnClick = (first) => (console.log(first))\r\n\r\n// Section 5 to return cards div\r\nreturn (randomCards.map((animal, index) =>   \r\n<div className='card' onClick={() => \r\n    {\r\n        console.log(index, animal.status);\r\n        setStatus(status)\r\n        setPosition(index);\r\n    }\r\n    }>\r\n  <div className={(position)}></div>\r\n  <img src={animal.image}></img>\r\n</div>\r\n))\r\n}  \r\nexport default Cards\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}