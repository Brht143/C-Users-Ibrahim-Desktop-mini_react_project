{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrahim\\\\Desktop\\\\mini_react_project\\\\mini_react_project\\\\mini_react_project\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  // Section 1 define animals array that consists of animal objects\n  let animals = [{\n    id: 0,\n    image: \"https://images.pexels.com/photos/47547/squirrel-animal-cute-rodents-47547.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 1,\n    image: \"https://images.pexels.com/photos/34231/antler-antler-carrier-fallow-deer-hirsch.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 2,\n    image: \"https://images.pexels.com/photos/792381/pexels-photo-792381.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 3,\n    image: \"https://images.pexels.com/photos/162140/duckling-birds-yellow-fluffy-162140.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 4,\n    image: \"https://images.pexels.com/photos/326012/pexels-photo-326012.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 5,\n    image: \"https://images.pexels.com/photos/2295744/pexels-photo-2295744.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 6,\n    image: \"https://images.pexels.com/photos/86405/penguin-funny-blue-water-86405.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 7,\n    image: \"https://images.pexels.com/photos/3608263/pexels-photo-3608263.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 8,\n    image: \"https://images.pexels.com/photos/4588065/pexels-photo-4588065.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 9,\n    image: \"https://images.pexels.com/photos/357159/pexels-photo-357159.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 10,\n    image: \"https://images.pexels.com/photos/59816/swan-bird-nature-water-bird-59816.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 11,\n    image: \"https://images.pexels.com/photos/36846/bald-eagle-adler-bird-of-prey-raptor.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 12,\n    image: \"https://images.pexels.com/photos/5145/animal-easter-chick-chicken.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 13,\n    image: \"https://images.pexels.com/photos/40984/animal-ara-macao-beak-bird-40984.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }];\n\n  // Section 2 define required function to get random values\n  // Math.floor to return int number instead of Float // example 2.97 => 2\n  // Math.random to return float number between 0 and 1 // example 0.73\n  // sortRandom to return value in range of [-0.5,0.5] => increase or decrease sort\n  const getRandomInt = max => Math.floor(Math.random() * max);\n  const sortRandom = (a, b) => 0.5 - Math.random();\n\n  // Section 3 return random 8 animals objects\n  let randomIndex = 0;\n  let randomArr = [];\n  while (randomIndex < 8) {\n    let randomNumber = getRandomInt(14);\n    if (randomArr.includes(randomNumber)) continue;else {\n      randomArr.push(randomNumber);\n      randomIndex++;\n    }\n  }\n  let eightCards = animals.filter((animal, index) => randomArr.includes(index));\n  // console.log(eightAnimals);\n\n  let randomCards = [...eightCards, ...eightCards].sort(sortRandom);\n  console.log(randomCardss);\n  let coveredAnimals;\n  // Section 4 to define functions to control cards cover using useState\n\n  const [cover, setCover] = useState(true);\n  const isCovered = cover ? \"cover\" : \"\";\n  const handleOnClick = () => setCover(false);\n\n  // Section 5 to return cards div\n  return randomAnimals.map(animal => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handleOnClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: isCovered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: animal.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 1\n  }, this));\n};\n_s(Cards, \"hS+d67c3lo9upS7LG/sH+co98Os=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cards","_s","animals","id","image","getRandomInt","max","Math","floor","random","sortRandom","a","b","randomIndex","randomArr","randomNumber","includes","push","eightCards","filter","animal","index","randomCards","sort","console","log","randomCardss","coveredAnimals","cover","setCover","isCovered","handleOnClick","randomAnimals","map","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim/Desktop/mini_react_project/mini_react_project/mini_react_project/src/Components/Cards.js"],"sourcesContent":["import '../App.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Cards = () => {\r\n\r\n// Section 1 define animals array that consists of animal objects\r\nlet animals = [\r\n    {id: 0, image :\"https://images.pexels.com/photos/47547/squirrel-animal-cute-rodents-47547.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 1, image :\"https://images.pexels.com/photos/34231/antler-antler-carrier-fallow-deer-hirsch.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 2, image :\"https://images.pexels.com/photos/792381/pexels-photo-792381.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 3, image :\"https://images.pexels.com/photos/162140/duckling-birds-yellow-fluffy-162140.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 4, image :\"https://images.pexels.com/photos/326012/pexels-photo-326012.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 5, image :\"https://images.pexels.com/photos/2295744/pexels-photo-2295744.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 6, image :\"https://images.pexels.com/photos/86405/penguin-funny-blue-water-86405.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 7, image :\"https://images.pexels.com/photos/3608263/pexels-photo-3608263.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 8, image :\"https://images.pexels.com/photos/4588065/pexels-photo-4588065.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 9, image :\"https://images.pexels.com/photos/357159/pexels-photo-357159.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 10, image :\"https://images.pexels.com/photos/59816/swan-bird-nature-water-bird-59816.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 11, image :\"https://images.pexels.com/photos/36846/bald-eagle-adler-bird-of-prey-raptor.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 12, image :\"https://images.pexels.com/photos/5145/animal-easter-chick-chicken.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 13, image :\"https://images.pexels.com/photos/40984/animal-ara-macao-beak-bird-40984.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"}\r\n];\r\n\r\n\r\n// Section 2 define required function to get random values\r\n// Math.floor to return int number instead of Float // example 2.97 => 2\r\n// Math.random to return float number between 0 and 1 // example 0.73\r\n// sortRandom to return value in range of [-0.5,0.5] => increase or decrease sort\r\nconst getRandomInt = max => Math.floor(Math.random() * max);\r\nconst sortRandom = (a, b) => 0.5 - Math.random();  \r\n\r\n// Section 3 return random 8 animals objects\r\nlet randomIndex = 0;\r\nlet randomArr = [];\r\n\r\nwhile (randomIndex < 8)\r\n    {\r\n        let randomNumber = getRandomInt(14);\r\n        if (randomArr.includes(randomNumber)) continue\r\n        else\r\n        {\r\n            randomArr.push(randomNumber);\r\n            randomIndex++;\r\n        }\r\n    }\r\n    \r\nlet eightCards = animals.filter((animal, index) => randomArr.includes(index));\r\n    // console.log(eightAnimals);\r\n    \r\nlet randomCards = [...eightCards, ...eightCards].sort(sortRandom);\r\n\r\nconsole.log(randomCardss);\r\n\r\nlet coveredAnimals\r\n// Section 4 to define functions to control cards cover using useState\r\n\r\nconst [cover, setCover] = useState(true);\r\nconst isCovered = (cover) ? \"cover\" : \"\";\r\n\r\nconst handleOnClick = () => setCover(false)\r\n\r\n\r\n// Section 5 to return cards div\r\nreturn (randomAnimals.map(animal =>   \r\n<div className='card' onClick={handleOnClick}>\r\n  <div className={isCovered}></div>\r\n  <img src={animal.image}></img>\r\n</div>\r\n))\r\n\r\n}  \r\nexport default Cards\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}