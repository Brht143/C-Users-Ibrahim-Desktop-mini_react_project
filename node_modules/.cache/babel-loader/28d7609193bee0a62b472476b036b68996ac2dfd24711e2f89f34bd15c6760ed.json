{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrahim\\\\Desktop\\\\mini_react_project\\\\mini_react_project\\\\mini_react_project\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport pokemons from \"../data/cards\";\n\n// Math.random to return float number between 0 and 1 // example 0.73\n// Math.floor to return int number instead of Float // example 2.97 => 2\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomInt = num => Math.floor(Math.random() * num);\nlet randomIndex = 0;\nlet randomArr = [];\nwhile (randomIndex < 8) {\n  let randomNumber = getRandomInt(pokemons.length);\n  if (randomArr.includes(randomNumber)) continue;else {\n    randomArr.push(randomNumber);\n    randomIndex++;\n  }\n}\nconst sortRandom = (a, b) => 0.5 - Math.random();\nlet eightCards = pokemons.filter((card, index) => randomArr.includes(index));\nlet pokemonsCards = [...eightCards, ...eightCards].sort(sortRandom).map((card, index) => Object.assign({\n  index: index\n}, card));\nconst Cards = () => {\n  _s();\n  const [previousRef, setPreviousRef] = useState();\n  const [previousIndex, setPreviousIndex] = useState();\n  const resetCards = () => {\n    setPreviousRef();\n    setPreviousIndex();\n    console.log(\"Cards Reset!\");\n  };\n  const handleCompare = currentCard => {\n    if (currentCard.status === \"show\") return true;\n    currentCard.status = \"show\";\n    if (previousRef) {\n      currentCard.status = pokemonsCards[previousIndex].status = \"show\";\n      setTimeout(resetCards, 2000);\n      resetCards();\n    } else {\n      setPreviousRef(currentCard.ref);\n      setPreviousIndex(currentCard.index);\n    }\n  };\n  return pokemonsCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => handleCompare(card),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: card.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, card.index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n};\n_s(Cards, \"sSJgGox2C2qWx8EgqIBlaXanz2g=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","pokemons","jsxDEV","_jsxDEV","getRandomInt","num","Math","floor","random","randomIndex","randomArr","randomNumber","length","includes","push","sortRandom","a","b","eightCards","filter","card","index","pokemonsCards","sort","map","Object","assign","Cards","_s","previousRef","setPreviousRef","previousIndex","setPreviousIndex","resetCards","console","log","handleCompare","currentCard","status","setTimeout","ref","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim/Desktop/mini_react_project/mini_react_project/mini_react_project/src/Components/Cards.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport pokemons from \"../data/cards\";\r\n\r\n// Math.random to return float number between 0 and 1 // example 0.73\r\n// Math.floor to return int number instead of Float // example 2.97 => 2\r\n\r\nconst getRandomInt = (num) => Math.floor(Math.random() * num);\r\n\r\nlet randomIndex = 0;\r\nlet randomArr = [];\r\n\r\nwhile (randomIndex < 8) {\r\n  let randomNumber = getRandomInt(pokemons.length);\r\n  if (randomArr.includes(randomNumber)) continue;\r\n  else {\r\n    randomArr.push(randomNumber);\r\n    randomIndex++;\r\n  }\r\n}\r\n\r\nconst sortRandom = (a, b) => 0.5 - Math.random();\r\n\r\nlet eightCards = pokemons.filter((card, index) => randomArr.includes(index));\r\n\r\nlet pokemonsCards = [...eightCards, ...eightCards]\r\n  .sort(sortRandom)\r\n  .map((card, index) => Object.assign({ index: index }, card));\r\n\r\nconst Cards = () => {\r\n  const [previousRef, setPreviousRef] = useState();\r\n  const [previousIndex, setPreviousIndex] = useState();\r\n\r\n  const resetCards = () => {\r\n    setPreviousRef();\r\n    setPreviousIndex();\r\n    console.log(\"Cards Reset!\");\r\n  };\r\n  const handleCompare = (currentCard) => {\r\n    if (currentCard.status === \"show\") return true;\r\n    currentCard.status = \"show\";\r\n    if (previousRef) {\r\n      currentCard.status = pokemonsCards[previousIndex].status = \"show\";\r\n      setTimeout(resetCards, 2000);\r\n      resetCards();\r\n    } else {\r\n      setPreviousRef(currentCard.ref);\r\n      setPreviousIndex(currentCard.index);\r\n    }\r\n  };\r\n\r\n  return pokemonsCards.map((card) => (\r\n    <div key={card.index} className=\"card\" onClick={() => handleCompare(card)}>\r\n      <div className={card.status}></div>\r\n      <img src={card.image}></img>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}