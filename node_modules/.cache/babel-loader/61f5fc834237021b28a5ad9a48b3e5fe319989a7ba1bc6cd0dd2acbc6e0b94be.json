{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrahim\\\\Desktop\\\\mini_react_project\\\\mini_react_project\\\\mini_react_project\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport pokemonsCards from \"../data/cards\";\nimport cover from \"../images/cover.jpg\";\n\n// Math.random to return float number between 0 and 1 // example 0.73\n// Math.floor to return int number instead of Float // example 2.97 => 2\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [previousRef, setPreviousRef] = useState();\n  const [previousIndex, setPreviousIndex] = useState();\n  const handleCompare = currentCard => {\n    if (currentCard.className === \"card flip\") return true;\n    currentCard.className = \"card flip\";\n    if (previousRef) {\n      let previousCard = pokemonsCards[previousIndex];\n      if (currentCard.ref === previousCard.ref) currentCard.className = \"card flip\";else setTimeout(currentCard.className = \"card\", 1500);\n      setPreviousRef();\n      setPreviousIndex();\n    } else {\n      setPreviousRef(currentCard.ref);\n      setPreviousIndex(currentCard.index);\n    }\n  };\n  return pokemonsCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: card.className,\n    onClick: () => handleCompare(card),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"show\",\n      src: card.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"hide\",\n      src: cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, card.index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n};\n_s(Cards, \"sSJgGox2C2qWx8EgqIBlaXanz2g=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","pokemonsCards","cover","jsxDEV","_jsxDEV","Cards","_s","previousRef","setPreviousRef","previousIndex","setPreviousIndex","handleCompare","currentCard","className","previousCard","ref","setTimeout","index","map","card","onClick","children","src","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim/Desktop/mini_react_project/mini_react_project/mini_react_project/src/Components/Cards.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport pokemonsCards from \"../data/cards\";\r\nimport cover from \"../images/cover.jpg\"\r\n\r\n// Math.random to return float number between 0 and 1 // example 0.73\r\n// Math.floor to return int number instead of Float // example 2.97 => 2\r\n\r\nconst Cards = () => {\r\n  const [previousRef, setPreviousRef] = useState();\r\n  const [previousIndex, setPreviousIndex] = useState();\r\n \r\n  const handleCompare = (currentCard) => {\r\n\r\n    if (currentCard.className === \"card flip\") return true;\r\n\r\n    currentCard.className = \"card flip\"\r\n    if (previousRef) {\r\n        let previousCard = pokemonsCards[previousIndex];\r\n        if (currentCard.ref === previousCard.ref) currentCard.className = \"card flip\"\r\n        else setTimeout(currentCard.className = \"card\", 1500)\r\n        setPreviousRef();\r\n        setPreviousIndex();\r\n    } \r\n    else\r\n    {\r\n      setPreviousRef(currentCard.ref);\r\n      setPreviousIndex(currentCard.index);\r\n    }\r\n  };\r\n\r\n  return pokemonsCards.map((card) => (\r\n    <div key={card.index} className={card.className} onClick={() => handleCompare(card)}>\r\n      <img className = \"show\" src={card.image}></img>\r\n      <img className = \"hide\" src={cover}></img>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AACnB,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,KAAK,MAAM,qBAAqB;;AAEvC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAEpD,MAAMW,aAAa,GAAIC,WAAW,IAAK;IAErC,IAAIA,WAAW,CAACC,SAAS,KAAK,WAAW,EAAE,OAAO,IAAI;IAEtDD,WAAW,CAACC,SAAS,GAAG,WAAW;IACnC,IAAIN,WAAW,EAAE;MACb,IAAIO,YAAY,GAAGb,aAAa,CAACQ,aAAa,CAAC;MAC/C,IAAIG,WAAW,CAACG,GAAG,KAAKD,YAAY,CAACC,GAAG,EAAEH,WAAW,CAACC,SAAS,GAAG,WAAW,MACxEG,UAAU,CAACJ,WAAW,CAACC,SAAS,GAAG,MAAM,EAAE,IAAI,CAAC;MACrDL,cAAc,CAAC,CAAC;MAChBE,gBAAgB,CAAC,CAAC;IACtB,CAAC,MAED;MACEF,cAAc,CAACI,WAAW,CAACG,GAAG,CAAC;MAC/BL,gBAAgB,CAACE,WAAW,CAACK,KAAK,CAAC;IACrC;EACF,CAAC;EAED,OAAOhB,aAAa,CAACiB,GAAG,CAAEC,IAAI,iBAC5Bf,OAAA;IAAsBS,SAAS,EAAEM,IAAI,CAACN,SAAU;IAACO,OAAO,EAAEA,CAAA,KAAMT,aAAa,CAACQ,IAAI,CAAE;IAAAE,QAAA,gBAClFjB,OAAA;MAAKS,SAAS,EAAG,MAAM;MAACS,GAAG,EAAEH,IAAI,CAACI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/CvB,OAAA;MAAKS,SAAS,EAAG,MAAM;MAACS,GAAG,EAAEpB;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,GAFlCR,IAAI,CAACF,KAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGf,CACN,CAAC;AACJ,CAAC;AAACrB,EAAA,CA7BID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}