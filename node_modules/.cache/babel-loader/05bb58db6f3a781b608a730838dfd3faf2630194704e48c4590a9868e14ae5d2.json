{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrahim\\\\Desktop\\\\mini_react_project\\\\mini_react_project\\\\mini_react_project\\\\src\\\\Components\\\\Cards.js\",\n  _s2 = $RefreshSig$();\nimport '../App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s2();\n  // Section 1 define animals array that consists of animal objects\n  let animals = [{\n    id: 0,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/47547/squirrel-animal-cute-rodents-47547.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 1,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/34231/antler-antler-carrier-fallow-deer-hirsch.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 2,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/792381/pexels-photo-792381.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 3,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/162140/duckling-birds-yellow-fluffy-162140.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 4,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/326012/pexels-photo-326012.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 5,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/2295744/pexels-photo-2295744.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 6,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/86405/penguin-funny-blue-water-86405.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 7,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/3608263/pexels-photo-3608263.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 8,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/4588065/pexels-photo-4588065.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 9,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/357159/pexels-photo-357159.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 10,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/59816/swan-bird-nature-water-bird-59816.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 11,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/36846/bald-eagle-adler-bird-of-prey-raptor.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 12,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/5145/animal-easter-chick-chicken.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }, {\n    id: 13,\n    isCovered: \"cover\",\n    image: \"https://images.pexels.com/photos/40984/animal-ara-macao-beak-bird-40984.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\n  }];\n\n  // Section 2 define required function to get random values\n  // Math.floor to return int number instead of Float // example 2.97 => 2\n  // Math.random to return float number between 0 and 1 // example 0.73\n  // sortRandom to return value in range of [-0.5,0.5] => increase or decrease sort\n  const getRandomInt = max => Math.floor(Math.random() * max);\n  const sortRandom = (a, b) => 0.5 - Math.random();\n\n  // Section 3 return random 8 animals objects\n  let randomIndex = 0;\n  let randomArr = [];\n  while (randomIndex < 8) {\n    let randomNumber = getRandomInt(14);\n    if (randomArr.includes(randomNumber)) continue;else {\n      randomArr.push(randomNumber);\n      randomIndex++;\n    }\n  }\n  let eightCards = animals.filter((animal, index) => randomArr.includes(index));\n  let randomCards = [...eightCards, ...eightCards].sort(sortRandom);\n\n  // Section 4 to define functions to control cards cover using useState\n\n  const [covered, setCovered] = useState(randomCards.isCovered);\n\n  // Section 5 to return cards div\n  return randomCards.map(animal => {\n    var _s = $RefreshSig$();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onClick: _s(() => {\n        _s();\n        animal.isCovered = \"\";\n        console.log(animal.isCovered);\n        useState(animal.isCovered);\n      }, \"OattybGzlAIBDVy5DOiz1YuLF18=\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: animal.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this);\n  });\n};\n_s2(Cards, \"XvHacuMGqer0K74OXZHnOL/cE5Y=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cards","_s2","animals","id","isCovered","image","getRandomInt","max","Math","floor","random","sortRandom","a","b","randomIndex","randomArr","randomNumber","includes","push","eightCards","filter","animal","index","randomCards","sort","covered","setCovered","map","_s","$RefreshSig$","className","onClick","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim/Desktop/mini_react_project/mini_react_project/mini_react_project/src/Components/Cards.js"],"sourcesContent":["import '../App.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Cards = () => {\r\n\r\n// Section 1 define animals array that consists of animal objects\r\nlet animals = [\r\n    {id: 0, isCovered: \"cover\",image :\"https://images.pexels.com/photos/47547/squirrel-animal-cute-rodents-47547.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 1, isCovered: \"cover\",image :\"https://images.pexels.com/photos/34231/antler-antler-carrier-fallow-deer-hirsch.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 2, isCovered: \"cover\",image :\"https://images.pexels.com/photos/792381/pexels-photo-792381.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 3, isCovered: \"cover\",image :\"https://images.pexels.com/photos/162140/duckling-birds-yellow-fluffy-162140.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 4, isCovered: \"cover\",image :\"https://images.pexels.com/photos/326012/pexels-photo-326012.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 5, isCovered: \"cover\",image :\"https://images.pexels.com/photos/2295744/pexels-photo-2295744.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 6, isCovered: \"cover\",image :\"https://images.pexels.com/photos/86405/penguin-funny-blue-water-86405.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 7, isCovered: \"cover\",image :\"https://images.pexels.com/photos/3608263/pexels-photo-3608263.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 8, isCovered: \"cover\",image :\"https://images.pexels.com/photos/4588065/pexels-photo-4588065.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 9, isCovered: \"cover\",image :\"https://images.pexels.com/photos/357159/pexels-photo-357159.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 10, isCovered: \"cover\", image :\"https://images.pexels.com/photos/59816/swan-bird-nature-water-bird-59816.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 11, isCovered: \"cover\", image :\"https://images.pexels.com/photos/36846/bald-eagle-adler-bird-of-prey-raptor.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 12, isCovered: \"cover\", image :\"https://images.pexels.com/photos/5145/animal-easter-chick-chicken.jpg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"},\r\n    {id: 13, isCovered: \"cover\", image :\"https://images.pexels.com/photos/40984/animal-ara-macao-beak-bird-40984.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"}\r\n];\r\n\r\n\r\n// Section 2 define required function to get random values\r\n// Math.floor to return int number instead of Float // example 2.97 => 2\r\n// Math.random to return float number between 0 and 1 // example 0.73\r\n// sortRandom to return value in range of [-0.5,0.5] => increase or decrease sort\r\nconst getRandomInt = max => Math.floor(Math.random() * max);\r\nconst sortRandom = (a, b) => 0.5 - Math.random();  \r\n\r\n// Section 3 return random 8 animals objects\r\nlet randomIndex = 0;\r\nlet randomArr = [];\r\n\r\nwhile (randomIndex < 8)\r\n    {\r\n        let randomNumber = getRandomInt(14);\r\n        if (randomArr.includes(randomNumber)) continue\r\n        else\r\n        {\r\n            randomArr.push(randomNumber);\r\n            randomIndex++;\r\n        }\r\n    }\r\n    \r\nlet eightCards = animals.filter((animal, index) => randomArr.includes(index));\r\n    \r\nlet randomCards = [...eightCards, ...eightCards].sort(sortRandom);\r\n\r\n\r\n// Section 4 to define functions to control cards cover using useState\r\n\r\n\r\nconst [covered, setCovered] = useState(randomCards.isCovered);\r\n\r\n\r\n// Section 5 to return cards div\r\nreturn (randomCards.map(animal =>   \r\n<div className='card' onClick={() => \r\n    {\r\n        animal.isCovered = \"\"\r\n        console.log(animal.isCovered)\r\n        useState(animal.isCovered)\r\n    }}>\r\n  <div className='cover'></div>\r\n  <img src={animal.image}></img>\r\n</div>\r\n))\r\n}  \r\nexport default Cards\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}