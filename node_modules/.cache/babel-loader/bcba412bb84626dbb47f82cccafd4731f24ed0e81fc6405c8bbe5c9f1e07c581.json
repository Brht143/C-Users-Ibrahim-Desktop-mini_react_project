{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrahim\\\\Desktop\\\\mini_react_project\\\\mini_react_project\\\\mini_react_project\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.css\";\nimport pokemonsCards from \"../data/cards\";\n\n// Math.random to return float number between 0 and 1 // example 0.73\n// Math.floor to return int number instead of Float // example 2.97 => 2\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [previousRef, setPreviousRef] = useState();\n  const [previousIndex, setPreviousIndex] = useState();\n  const handleCompare = currentCard => {\n    // if (currentCard.status === \"show\") return true;\n    currentCard.status = \"show\";\n    setTimeout(() => {\n      if (previousRef) {\n        let previousCard = pokemonsCards[previousIndex];\n        if (currentCard.ref === previousCard.ref) currentCard.status = previousCard.status = \"show\";else currentCard.status = previousCard.status = \"hide\";\n        console.log(\"Current\", currentCard.ref, \"Previous \", previousCard.ref);\n        setPreviousRef();\n        setPreviousIndex();\n      } else {\n        setPreviousRef(currentCard.ref);\n        setPreviousIndex(currentCard.index);\n      }\n    }, 2000);\n  };\n  return pokemonsCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => handleCompare(card),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: card.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, card.index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n};\n_s(Cards, \"sSJgGox2C2qWx8EgqIBlaXanz2g=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","pokemonsCards","jsxDEV","_jsxDEV","Cards","_s","previousRef","setPreviousRef","previousIndex","setPreviousIndex","handleCompare","currentCard","status","setTimeout","previousCard","ref","console","log","index","map","card","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim/Desktop/mini_react_project/mini_react_project/mini_react_project/src/Components/Cards.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport pokemonsCards from \"../data/cards\";\r\n\r\n// Math.random to return float number between 0 and 1 // example 0.73\r\n// Math.floor to return int number instead of Float // example 2.97 => 2\r\n\r\nconst Cards = () => {\r\n  const [previousRef, setPreviousRef] = useState();\r\n  const [previousIndex, setPreviousIndex] = useState();\r\n\r\n  const handleCompare = (currentCard) => {\r\n    // if (currentCard.status === \"show\") return true;\r\n    currentCard.status = \"show\";\r\n    setTimeout( () => { if (previousRef) {\r\n      let previousCard = pokemonsCards[previousIndex];\r\n      if (currentCard.ref === previousCard.ref)  currentCard.status = previousCard.status = \"show\"\r\n      \r\n      else   currentCard.status = previousCard.status =  \"hide\"\r\n    \r\n      console.log(\"Current\", currentCard.ref, \"Previous \", previousCard.ref);\r\n\r\n      setPreviousRef();\r\n      setPreviousIndex();\r\n    } else {\r\n\r\n      setPreviousRef(currentCard.ref);\r\n      setPreviousIndex(currentCard.index);\r\n    \r\n    }}, 2000)\r\n   \r\n  };\r\n\r\n  return pokemonsCards.map((card) => (\r\n    <div key={card.index} className=\"card\" onClick={() => handleCompare(card)}>\r\n      <div className={card.status}></div>\r\n      <img src={card.image}></img>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AACnB,OAAOC,aAAa,MAAM,eAAe;;AAEzC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEpD,MAAMU,aAAa,GAAIC,WAAW,IAAK;IACrC;IACAA,WAAW,CAACC,MAAM,GAAG,MAAM;IAC3BC,UAAU,CAAE,MAAM;MAAE,IAAIP,WAAW,EAAE;QACnC,IAAIQ,YAAY,GAAGb,aAAa,CAACO,aAAa,CAAC;QAC/C,IAAIG,WAAW,CAACI,GAAG,KAAKD,YAAY,CAACC,GAAG,EAAGJ,WAAW,CAACC,MAAM,GAAGE,YAAY,CAACF,MAAM,GAAG,MAAM,MAErFD,WAAW,CAACC,MAAM,GAAGE,YAAY,CAACF,MAAM,GAAI,MAAM;QAEzDI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEN,WAAW,CAACI,GAAG,EAAE,WAAW,EAAED,YAAY,CAACC,GAAG,CAAC;QAEtER,cAAc,CAAC,CAAC;QAChBE,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QAELF,cAAc,CAACI,WAAW,CAACI,GAAG,CAAC;QAC/BN,gBAAgB,CAACE,WAAW,CAACO,KAAK,CAAC;MAErC;IAAC,CAAC,EAAE,IAAI,CAAC;EAEX,CAAC;EAED,OAAOjB,aAAa,CAACkB,GAAG,CAAEC,IAAI,iBAC5BjB,OAAA;IAAsBkB,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAACU,IAAI,CAAE;IAAAG,QAAA,gBACxEpB,OAAA;MAAKkB,SAAS,EAAED,IAAI,CAACR;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnCxB,OAAA;MAAKyB,GAAG,EAAER,IAAI,CAACS;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,GAFpBP,IAAI,CAACF,KAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGf,CACN,CAAC;AACJ,CAAC;AAACtB,EAAA,CAhCID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}