{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrahim\\\\Desktop\\\\mini_react_project\\\\mini_react_project\\\\mini_react_project\\\\src\\\\Components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport '../App.css';\nimport animals from '../data/cards';\n\n// Math.random to return float number between 0 and 1 // example 0.73\n// Math.floor to return int number instead of Float // example 2.97 => 2\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomInt = num => Math.floor(Math.random() * num);\nconst sortRandom = (a, b) => 0.5 - Math.random();\nlet randomIndex = 0;\nlet randomArr = [];\nwhile (randomIndex < 8) {\n  let randomNumber = getRandomInt(animals.length);\n  if (randomArr.includes(randomNumber)) continue;else {\n    randomArr.push(randomNumber);\n    randomIndex++;\n  }\n}\nlet eightCards = animals.filter((animal, index) => randomArr.includes(index));\nlet randomCards = [...eightCards, ...eightCards].sort(sortRandom);\nconst Cards = () => {\n  _s();\n  const [counter, setCounter] = useState(0);\n\n  // (isClicked) ? true:false\n  // ;counter.push({index, animalID})\n\n  const handleCompare = (index, animalID) => {\n    console.log(index, animalID);\n    console.log(counter);\n  };\n  return randomCards.map((animal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => {\n      console.log(index, animal.status);\n      setCounter(counter + 1);\n      console.log(counter);\n      handleCompare(index, animal.id);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: counter === index ? '' : 'hide'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: animal.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n};\n_s(Cards, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","animals","jsxDEV","_jsxDEV","getRandomInt","num","Math","floor","random","sortRandom","a","b","randomIndex","randomArr","randomNumber","length","includes","push","eightCards","filter","animal","index","randomCards","sort","Cards","_s","counter","setCounter","handleCompare","animalID","console","log","map","className","onClick","status","id","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","_c","$RefreshReg$"],"sources":["C:/Users/Ibrahim/Desktop/mini_react_project/mini_react_project/mini_react_project/src/Components/Cards.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport '../App.css';\r\nimport animals from '../data/cards';\r\n\r\n// Math.random to return float number between 0 and 1 // example 0.73\r\n// Math.floor to return int number instead of Float // example 2.97 => 2\r\n\r\nconst getRandomInt = num => Math.floor(Math.random() * num);\r\nconst sortRandom = (a, b) => 0.5 - Math.random();  \r\n\r\nlet randomIndex = 0;\r\nlet randomArr = [];\r\nwhile (randomIndex < 8)\r\n    {\r\n        let randomNumber = getRandomInt(animals.length);\r\n        if (randomArr.includes(randomNumber)) continue\r\n        else\r\n        {\r\n            randomArr.push(randomNumber);\r\n            randomIndex++;\r\n        }\r\n    }\r\nlet eightCards = animals.filter((animal, index) => randomArr.includes(index));\r\nlet randomCards = [...eightCards, ...eightCards].sort(sortRandom);\r\n\r\nconst Cards = () => {\r\n    \r\n    const [counter, setCounter] = useState(0);\r\n\r\n    // (isClicked) ? true:false\r\n    // ;counter.push({index, animalID})\r\n\r\n    const handleCompare = (index, animalID) => {console.log(index, animalID);console.log(counter)}\r\n\r\n    return (randomCards.map((animal, index) =>   \r\n    <div className='card' onClick={() => {console.log(index, animal.status); setCounter(counter + 1);console.log(counter);handleCompare(index, animal.id)}}>\r\n      <div className={(counter === index) ? '': 'hide'}></div>\r\n      <img src={animal.image}></img>\r\n    </div>\r\n    ))\r\n}\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,eAAe;;AAEnC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGC,GAAG,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;AAC3D,MAAMI,UAAU,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK,GAAG,GAAGL,IAAI,CAACE,MAAM,CAAC,CAAC;AAEhD,IAAII,WAAW,GAAG,CAAC;AACnB,IAAIC,SAAS,GAAG,EAAE;AAClB,OAAOD,WAAW,GAAG,CAAC,EAClB;EACI,IAAIE,YAAY,GAAGV,YAAY,CAACH,OAAO,CAACc,MAAM,CAAC;EAC/C,IAAIF,SAAS,CAACG,QAAQ,CAACF,YAAY,CAAC,EAAE,SAAQ,KAE9C;IACID,SAAS,CAACI,IAAI,CAACH,YAAY,CAAC;IAC5BF,WAAW,EAAE;EACjB;AACJ;AACJ,IAAIM,UAAU,GAAGjB,OAAO,CAACkB,MAAM,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAKR,SAAS,CAACG,QAAQ,CAACK,KAAK,CAAC,CAAC;AAC7E,IAAIC,WAAW,GAAG,CAAC,GAAGJ,UAAU,EAAE,GAAGA,UAAU,CAAC,CAACK,IAAI,CAACd,UAAU,CAAC;AAEjE,MAAMe,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA;;EAEA,MAAM4B,aAAa,GAAGA,CAACP,KAAK,EAAEQ,QAAQ,KAAK;IAACC,OAAO,CAACC,GAAG,CAACV,KAAK,EAAEQ,QAAQ,CAAC;IAACC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EAAA,CAAC;EAE9F,OAAQJ,WAAW,CAACU,GAAG,CAAC,CAACZ,MAAM,EAAEC,KAAK,kBACtClB,OAAA;IAAK8B,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEA,CAAA,KAAM;MAACJ,OAAO,CAACC,GAAG,CAACV,KAAK,EAAED,MAAM,CAACe,MAAM,CAAC;MAAER,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MAACI,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;MAACE,aAAa,CAACP,KAAK,EAAED,MAAM,CAACgB,EAAE,CAAC;IAAA,CAAE;IAAAC,QAAA,gBACrJlC,OAAA;MAAK8B,SAAS,EAAGP,OAAO,KAAKL,KAAK,GAAI,EAAE,GAAE;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxDtC,OAAA;MAAKuC,GAAG,EAAEtB,MAAM,CAACuB;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CACL,CAAC;AACL,CAAC;AAAAhB,EAAA,CAfKD,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAgBX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}